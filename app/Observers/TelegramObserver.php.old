<?php

namespace App\Observers;

use App\Models\Telegram;
use Illuminate\Support\Facades\File;
use Illuminate\Support\Facades\Storage;
class TelegramObserver
{
    /**
     * Handle the Telegram "created" event.
     *
     * @param  \App\Models\Telegram  $telegram
     * @return void
     */
    public function created(Telegram $telegram)
    {
        //
    }

    /**
     * Handle the Telegram "updated" event.
     *
     * @param  \App\Models\Telegram  $telegram
     * @return void
     */
    public function updated(Telegram $telegram)
    {
        $configFileSource = base_path(env('BOT_TEMPLATE')) . 'bot_config.php';
        $configFile = base_path(env('BOT_DESTINATION')) . $telegram->user->id . '-rssbot/bot_config.php';
        $pidFile = base_path(env('BOT_DESTINATION')) . $telegram->user->id . '-rssbot/bot.pid';
        //dd($configFile);
        if(File::exists($configFile)){
            File::delete($configFile);
            //shell_exec("sudo rm ". $configFile);
        }
        if(File::exists($pidFile)){
            shell_exec("kill -9 `cat $pidFile`");
            File::delete($pidFile);
            //shell_exec("sudo rm ". $pidFile);
        }
        // write config
        // shell_exec("sudo touch ". $configFile);
        // shell_exec("sudo chmod 777 ". $configFile);

        // foreach (file($configFileSource) as $line) {
        //     if (strpos($line, '$chat = ') !== false) {
        //         // File::append($configFile, '$chat = ' . "'" . $telegram->channel . "'" . ';' . "\n");
        //         $insLine = '\$chat = ' . "'" . $telegram->channel . "'" . ';' . "\n";
        //     } elseif (strpos($line, '$rss = ') !== false) {
        //         // File::append($configFile, '$rss = ' . "'" . $telegram->rss . "'" . ';' . "\n");
        //         $insLine = '\$rss = ' . "'" . $telegram->rss . "'" . ';' . "\n";
        //     } else {
        //         // File::append($configFile, $line);
        //         $insLine =  $line;
        //     }
        //     shell_exec('sudo echo "' . $insLine . '" >> ' . $configFile);
        // }
        foreach (file($configFileSource) as $line) {
            if (strpos($line, '$chat = ') !== false) {
                $insLine = '$chat = ' . "'" . $telegram->channel . "'" . ';';
            } elseif (strpos($line, '$rss = ') !== false) {
                $insLine = '$rss = ' . "'" . $telegram->rss . "'" . ';';
            } else {
                $insLine =  $line;
            }
             File::append($configFile, $insLine . "\n");
        }

        //dd($telegram->channel);
        if ($telegram->channel !== env('BOT_DEFAULT_CHANNEL') && $telegram->rss !== env('BOT_DEFAULT_RSS')) {
            $botFile = base_path(env('BOT_DESTINATION')) . $telegram->user->id . '-rssbot/bot.php';
            shell_exec("php $botFile  > /dev/null 2>/dev/null &");
        }
    }

    /**
     * Handle the Telegram "deleted" event.
     *
     * @param  \App\Models\Telegram  $telegram
     * @return void
     */
    public function deleted(Telegram $telegram)
    {
        //
    }

    /**
     * Handle the Telegram "restored" event.
     *
     * @param  \App\Models\Telegram  $telegram
     * @return void
     */
    public function restored(Telegram $telegram)
    {
        //
    }

    /**
     * Handle the Telegram "force deleted" event.
     *
     * @param  \App\Models\Telegram  $telegram
     * @return void
     */
    public function forceDeleted(Telegram $telegram)
    {
        //
    }
}
